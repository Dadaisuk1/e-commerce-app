{
  "version": 3,
  "sources": [],
  "sections": [
    {"offset": {"line": 15, "column": 0}, "map": {"version":3,"sources":["file://C%3A/GitRepo/my-ecommerce-app/src/app/contexts/CartContext.tsx"],"sourcesContent":["// src/app/contexts/CartContext.tsx\n'use client'; // Context needs to be client-side\n\nimport React, { createContext, useState, useContext, ReactNode, useMemo, useCallback } from 'react';\nimport { Product, CartItem } from '@/app/data'; // Using import alias\n\n// Define the shape of the context data\ninterface CartContextType {\n  cartItems: CartItem[];\n  addToCart: (product: Product, quantity: number) => void;\n  removeFromCart: (productId: string) => void;\n  updateQuantity: (productId: string, newQuantity: number) => void;\n  applyDiscount: (code: string) => void; // Placeholder\n  clearCart: () => void;\n  subtotal: number;\n  total: number;\n  discountCode: string | null;\n  discountAmount: number;\n}\n\n// Create the context with a default value (can be null or an object matching the type)\nconst CartContext = createContext<CartContextType | undefined>(undefined);\n\n// Create a provider component\ninterface CartProviderProps {\n  children: ReactNode;\n}\n\nexport const CartProvider: React.FC<CartProviderProps> = ({ children }) => {\n  const [cartItems, setCartItems] = useState<CartItem[]>([]);\n  const [discountCode, setDiscountCode] = useState<string | null>(null);\n\n  // --- Core Cart Logic ---\n\n  const addToCart = useCallback((product: Product, quantity: number) => {\n      if (product.stock < quantity) {\n        alert(`Sorry, only ${product.stock} of ${product.name} available.`); // Basic feedback\n        return;\n      }\n\n      setCartItems(prevItems => {\n        const existingItem = prevItems.find(item => item.id === product.id);\n        if (existingItem) {\n          // Check stock again for increasing quantity\n          const potentialNewQuantity = existingItem.quantity + quantity;\n           if (product.stock < potentialNewQuantity) {\n             alert(`Sorry, only ${product.stock} of ${product.name} available. You already have ${existingItem.quantity} in cart.`);\n             return prevItems; // Return previous state if adding exceeds stock\n          }\n          // Increase quantity\n          return prevItems.map(item =>\n            item.id === product.id\n              ? { ...item, quantity: item.quantity + quantity }\n              : item\n          );\n        } else {\n          // Add new item\n          return [...prevItems, { ...product, quantity }];\n        }\n      });\n       console.log(`Added ${quantity} of ${product.name} to cart`); // Console feedback\n  }, []); // No dependencies needed if only using setter and product argument\n\n  const removeFromCart = useCallback((productId: string) => {\n    setCartItems(prevItems => prevItems.filter(item => item.id !== productId));\n    console.log(`Removed item ${productId} from cart`);\n  }, []);\n\n  const updateQuantity = useCallback((productId: string, newQuantity: number) => {\n    setCartItems(prevItems => {\n       const itemToUpdate = prevItems.find(item => item.id === productId);\n       if (!itemToUpdate) return prevItems; // Should not happen\n\n       if (newQuantity <= 0) {\n         // Remove item if quantity is 0 or less\n         return prevItems.filter(item => item.id !== productId);\n       } else if (newQuantity > itemToUpdate.stock) {\n          alert(`Sorry, only ${itemToUpdate.stock} of ${itemToUpdate.name} available.`);\n          // Optionally set quantity to max stock instead:\n          // return prevItems.map(item =>\n          //   item.id === productId ? { ...item, quantity: item.stock } : item\n          // );\n          return prevItems; // Keep original quantity if exceeds stock\n       } else {\n          // Update quantity\n          return prevItems.map(item =>\n            item.id === productId ? { ...item, quantity: newQuantity } : item\n          );\n       }\n    });\n     console.log(`Updated quantity for item ${productId} to ${newQuantity}`);\n  }, []);\n\n  const clearCart = useCallback(() => {\n    setCartItems([]);\n    setDiscountCode(null); // Reset discount on clear\n    console.log('Cart cleared');\n  }, []);\n\n  const applyDiscount = useCallback((code: string) => {\n      if (code.toUpperCase() === 'SAVE10') {\n          setDiscountCode('SAVE10');\n          alert('Discount SAVE10 applied!');\n      } else {\n          alert('Invalid discount code.');\n          setDiscountCode(null); // Ensure invalid code doesn't stick\n      }\n  }, []);\n\n\n  // --- Calculated Values ---\n  const subtotal = useMemo(() => {\n    return cartItems.reduce((sum, item) => sum + item.price * item.quantity, 0);\n  }, [cartItems]);\n\n   const discountAmount = useMemo(() => {\n        if (discountCode === 'SAVE10') {\n            return subtotal * 0.10; // 10% discount\n        }\n        return 0;\n    }, [subtotal, discountCode]);\n\n   const total = useMemo(() => {\n       return subtotal - discountAmount;\n   }, [subtotal, discountAmount]);\n\n\n  // --- Context Value ---\n  const value = useMemo(() => ({\n    cartItems,\n    addToCart,\n    removeFromCart,\n    updateQuantity,\n    applyDiscount,\n    clearCart,\n    subtotal,\n    total,\n    discountCode,\n    discountAmount,\n  }), [cartItems, addToCart, removeFromCart, updateQuantity, applyDiscount, clearCart, subtotal, total, discountCode, discountAmount]);\n\n  return <CartContext.Provider value={value}>{children}</CartContext.Provider>;\n};\n\n// Create a custom hook for easy consumption\nexport const useCart = (): CartContextType => {\n  const context = useContext(CartContext);\n  if (context === undefined) {\n    throw new Error('useCart must be used within a CartProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"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","debugId":null}},
    {"offset": {"line": 172, "column": 0}, "map": {"version":3,"sources":["file://C%3A/GitRepo/my-ecommerce-app/src/app/contexts/AuthContext.tsx"],"sourcesContent":["// src/app/contexts/AuthContext.tsx\n'use client';\n\nimport React, { createContext, useState, useContext, ReactNode, useMemo, useCallback } from 'react';\n\n// Define the shape of the user object (can be expanded later)\ninterface User {\n  id: string;\n  email: string; // Example field\n}\n\n// Define the shape of the context data\ninterface AuthContextType {\n  currentUser: User | null;\n  login: (email: string, pass: string) => void; // Simulate login\n  logout: () => void;\n  register: (email: string, pass: string) => void; // Simulate registration\n}\n\n// Create the context\nconst AuthContext = createContext<AuthContextType | undefined>(undefined);\n\n// Create a provider component\ninterface AuthProviderProps {\n  children: ReactNode;\n}\n\nexport const AuthProvider: React.FC<AuthProviderProps> = ({ children }) => {\n  const [currentUser, setCurrentUser] = useState<User | null>(null);\n\n  // Simulate login - replace with actual logic later\n  const login = useCallback((email: string, pass: string) => {\n    console.log(`Simulating login for: ${email}`);\n    // In a real app, you'd validate credentials here\n    if (email && pass) { // Basic check\n      const simulatedUser: User = { id: `user_${Date.now()}`, email: email };\n      setCurrentUser(simulatedUser);\n      console.log('Login successful (simulated)');\n      // Maybe redirect user using useRouter hook from 'next/navigation'\n    } else {\n        console.log('Login failed (simulated)');\n    }\n  }, []);\n\n  // Simulate registration - replace with actual logic later\n  const register = useCallback((email: string, pass: string) => {\n     console.log(`Simulating registration for: ${email}`);\n     if (email && pass) { // Basic check\n        const simulatedUser: User = { id: `user_${Date.now()}`, email: email };\n        setCurrentUser(simulatedUser); // Log in immediately after registration\n        console.log('Registration successful (simulated)');\n        // Maybe redirect user\n     } else {\n         console.log('Registration failed (simulated)');\n     }\n  }, []);\n\n  // Logout\n  const logout = useCallback(() => {\n    console.log('Logging out');\n    setCurrentUser(null);\n    // Maybe redirect user to homepage\n  }, []);\n\n  // Memoize the context value to prevent unnecessary re-renders\n  const value = useMemo(() => ({\n    currentUser,\n    login,\n    logout,\n    register,\n  }), [currentUser, login, logout, register]);\n\n  return <AuthContext.Provider value={value}>{children}</AuthContext.Provider>;\n};\n\n// Create a custom hook for easy consumption\nexport const useAuth = (): AuthContextType => {\n  const context = useContext(AuthContext);\n  if (context === undefined) {\n    throw new Error('useAuth must be used within an AuthProvider');\n  }\n  return context;\n};\n"],"names":[],"mappings":"AAAA,mCAAmC;;;;;;AAGnC;AAFA;;;AAkBA,qBAAqB;AACrB,MAAM,4BAAc,CAAA,GAAA,qMAAA,CAAA,gBAAa,AAAD,EAA+B;AAOxD,MAAM,eAA4C,CAAC,EAAE,QAAQ,EAAE;IACpE,MAAM,CAAC,aAAa,eAAe,GAAG,CAAA,GAAA,qMAAA,CAAA,WAAQ,AAAD,EAAe;IAE5D,mDAAmD;IACnD,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,OAAe;QACxC,QAAQ,GAAG,CAAC,CAAC,sBAAsB,EAAE,OAAO;QAC5C,iDAAiD;QACjD,IAAI,SAAS,MAAM;YACjB,MAAM,gBAAsB;gBAAE,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;gBAAE,OAAO;YAAM;YACrE,eAAe;YACf,QAAQ,GAAG,CAAC;QACZ,kEAAkE;QACpE,OAAO;YACH,QAAQ,GAAG,CAAC;QAChB;IACF,GAAG,EAAE;IAEL,0DAA0D;IAC1D,MAAM,WAAW,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE,CAAC,OAAe;QAC1C,QAAQ,GAAG,CAAC,CAAC,6BAA6B,EAAE,OAAO;QACnD,IAAI,SAAS,MAAM;YAChB,MAAM,gBAAsB;gBAAE,IAAI,CAAC,KAAK,EAAE,KAAK,GAAG,IAAI;gBAAE,OAAO;YAAM;YACrE,eAAe,gBAAgB,wCAAwC;YACvE,QAAQ,GAAG,CAAC;QACZ,sBAAsB;QACzB,OAAO;YACH,QAAQ,GAAG,CAAC;QAChB;IACH,GAAG,EAAE;IAEL,SAAS;IACT,MAAM,SAAS,CAAA,GAAA,qMAAA,CAAA,cAAW,AAAD,EAAE;QACzB,QAAQ,GAAG,CAAC;QACZ,eAAe;IACf,kCAAkC;IACpC,GAAG,EAAE;IAEL,8DAA8D;IAC9D,MAAM,QAAQ,CAAA,GAAA,qMAAA,CAAA,UAAO,AAAD,EAAE,IAAM,CAAC;YAC3B;YACA;YACA;YACA;QACF,CAAC,GAAG;QAAC;QAAa;QAAO;QAAQ;KAAS;IAE1C,qBAAO,8OAAC,YAAY,QAAQ;QAAC,OAAO;kBAAQ;;;;;;AAC9C;AAGO,MAAM,UAAU;IACrB,MAAM,UAAU,CAAA,GAAA,qMAAA,CAAA,aAAU,AAAD,EAAE;IAC3B,IAAI,YAAY,WAAW;QACzB,MAAM,IAAI,MAAM;IAClB;IACA,OAAO;AACT","debugId":null}},
    {"offset": {"line": 281, "column": 0}, "map": {"version":3,"sources":["file://C%3A/GitRepo/my-ecommerce-app/src/app/hooks/useCart.ts"],"sourcesContent":["export { useCart } from '@/app/contexts/CartContext';\n"],"names":[],"mappings":";AAAA","debugId":null}},
    {"offset": {"line": 299, "column": 0}, "map": {"version":3,"sources":["file://C%3A/GitRepo/my-ecommerce-app/src/app/components/layout/Header.tsx"],"sourcesContent":["// src/app/components/layout/Header.tsx\n'use client'; // Needed for hooks (useContext, useState, etc.)\n\nimport React from 'react';\nimport Link from 'next/link';\nimport { useCart } from '@/app/hooks/useCart'; // To show cart count later\n// import { useAuth } from '@/app/hooks/useAuth'; // To show conditional links later\n\nexport default function Header() {\n  const { cartItems } = useCart();\n  // const { currentUser, logout } = useAuth(); // Uncomment when AuthContext is ready\n\n  const cartItemCount = cartItems.reduce((count, item) => count + item.quantity, 0);\n\n  // Placeholder user state for demonstration\n  const currentUser = null; // Change to useAuth() hook later\n  const logout = () => console.log(\"Logout clicked\"); // Placeholder\n\n  return (\n    <header className=\"bg-white shadow-md sticky top-0 z-50\">\n      <nav className=\"container mx-auto px-4 sm:px-6 lg:px-8 py-4 flex items-center justify-between\">\n        {/* Site Logo/Name */}\n        <div className=\"flex items-center\">\n          <Link href=\"/\" className=\"text-2xl font-bold text-blue-600 hover:text-blue-800 transition-colors\">\n            MyStore\n          </Link>\n        </div>\n\n        {/* Navigation Links */}\n        <div className=\"flex items-center space-x-4 sm:space-x-6\">\n          <Link href=\"/\" className=\"text-gray-600 hover:text-blue-600 transition-colors\">\n            Shop\n          </Link>\n\n          {/* Cart Link with Item Count */}\n          <Link href=\"/cart\" className=\"relative text-gray-600 hover:text-blue-600 transition-colors\">\n            Cart\n            {cartItemCount > 0 && (\n              <span className=\"absolute -top-2 -right-3 bg-red-500 text-white text-xs rounded-full h-5 w-5 flex items-center justify-center\">\n                {cartItemCount}\n              </span>\n            )}\n          </Link>\n\n          {/* Conditional Auth Links - Placeholder Logic */}\n          {currentUser ? (\n            <>\n              <Link href=\"/orders\" className=\"text-gray-600 hover:text-blue-600 transition-colors\">\n                My Orders\n              </Link>\n              <button\n                onClick={logout}\n                className=\"text-gray-600 hover:text-blue-600 transition-colors\"\n              >\n                Logout\n              </button>\n            </>\n          ) : (\n            <>\n              <Link href=\"/login\" className=\"text-gray-600 hover:text-blue-600 transition-colors\">\n                Login\n              </Link>\n              <Link href=\"/register\" className=\"text-gray-600 hover:text-blue-600 transition-colors\">\n                Register\n              </Link>\n            </>\n          )}\n        </div>\n      </nav>\n    </header>\n  );\n}\n"],"names":[],"mappings":"AAAA,uCAAuC;;;;;AAIvC;AACA,2QAA+C,2BAA2B;AAA1E;AAJA,cAAc,gDAAgD;;;;AAO/C,SAAS;IACtB,MAAM,EAAE,SAAS,EAAE,GAAG,CAAA,GAAA,sIAAA,CAAA,UAAO,AAAD;IAC5B,oFAAoF;IAEpF,MAAM,gBAAgB,UAAU,MAAM,CAAC,CAAC,OAAO,OAAS,QAAQ,KAAK,QAAQ,EAAE;IAE/E,2CAA2C;IAC3C,MAAM,cAAc,MAAM,iCAAiC;IAC3D,MAAM,SAAS,IAAM,QAAQ,GAAG,CAAC,mBAAmB,cAAc;IAElE,qBACE,8OAAC;QAAO,WAAU;kBAChB,cAAA,8OAAC;YAAI,WAAU;;8BAEb,8OAAC;oBAAI,WAAU;8BACb,cAAA,8OAAC,4JAAA,CAAA,UAAI;wBAAC,MAAK;wBAAI,WAAU;kCAAyE;;;;;;;;;;;8BAMpG,8OAAC;oBAAI,WAAU;;sCACb,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAI,WAAU;sCAAsD;;;;;;sCAK/E,8OAAC,4JAAA,CAAA,UAAI;4BAAC,MAAK;4BAAQ,WAAU;;gCAA+D;gCAEzF,gBAAgB,mBACf,8OAAC;oCAAK,WAAU;8CACb;;;;;;;;;;;;wBAMN,2FAaC;;8CACE,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAS,WAAU;8CAAsD;;;;;;8CAGpF,8OAAC,4JAAA,CAAA,UAAI;oCAAC,MAAK;oCAAY,WAAU;8CAAsD;;;;;;;;;;;;;;;;;;;;;;;;;AASrG","debugId":null}}]
}